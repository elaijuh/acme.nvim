local Acme = {}

Acme.config = {
  terminal_colors = true,
  underline = true,
  bold = true,
  italic = {
    strings = true,
    emphasis = true,
    comments = true,
    operators = false,
    folds = true,
  },
  strikethrough = true,
  palette_overrides = {},
  overrides = {},
}

Acme.palette = {
  -- white
  w1 = "#FFFFEC",
  w2 = "#EEEEA7",
  w3 = "#999957",
  w4 = "#424242",

  -- red
  r1 = "#F8E7E7",
  r2 = "#F2ACAA",
  r3 = "#B85C57",

  -- green
  g1 = "#EFFEEC",
  g2 = "#98CE8F",
  g3 = "#57864E",

  -- yellow
  y1 = "#EAEBDB",
  y2 = "#B7B19C",
  y3 = "#8F7634",

  -- blue
  b1 = "#E2F1F8",
  b2 = "#A6DCF8",
  b3 = "#2A8DC5",

  -- magenta
  m1 = "#D0D0F7",
  m2 = "#8888C7",

  -- cyan
  c1 = "#EEFEFF",
  c2 = "#B0ECED",
  c3 = "#6AA7A8",

  -- accent
  a1 = "#030093",
}

local function get_groups()
  local p = Acme.palette
  local c = Acme.config
  local groups = {
    Normal = { fg = p.w4, bg = p.w1 },
    NormalFloat = { fg = p.g4, bg = p.g1 },
    NormalNC = { link = "Normal" },
    Visual = { fg = p.w4, bg = p.w2 },
    VisualNOS = { link = "Visual" },
    NonText = { fg = p.w3 },
    SpecialKey = { bold = c.bold },
    SpellBad = { fg = p.r2, underline = c.underline },
    SpellCap = { underline = c.underline },
    SpellLocal = { underline = c.underline },
    SpellRare = { underline = c.underline },
    StatusLine = { fg = p.w4, bg = p.c1, bold = c.bold },
    StatusLineNC = { fg = p.w4, bg = p.c1 },
    TabLine = { link = "StatusLineNC" },
    TabLineFill = { link = "StatusLineNC" },
    TabLineSel = { link = "StatusLineNC" },
    WinSeparator = { link = "StatusLineNC" },
    LineNr = { fg = p.w4, bg = p.w1 },
    LineNrAbove = { link = "LineNr" },
    LineNrBelow = { link = "LineNr" },
    SingleColumn = { link = "LineNr" },
    FloatBorder = { fg = p.g1, bg = p.g3 },
    CursorColumn = { bg = p.g1 },
    CursorLine = { fg = p.w4, bg = p.g1 },
    CursorLineNr = { fg = p.w1, bg = p.m2 },
    Folded = { fg = p.y3, bg = p.w1 },
    FoldColumn = { link = "Folded" },
    MatchParen = { bold = c.bold },
    ErrorMsg = { bold = c.bold },
    ModeMsg = { bold = c.bold },
    MoreMsg = { bold = c.bold },
    WarningMsg = { bold = c.bold },
    Directory = { bold = c.bold },
    DiffAdd = { fg = p.w4, bg = p.g2 },
    DiffChange = { fg = p.w4, bg = p.c2 },
    DiffDelete = { fg = p.w4, bg = p.r1 },
    DiffText = { fg = p.w4, bg = p.g2 },
    Title = { bold = c.bold },
    ColorColumn = { fg = p.w4, bg = p.w2 },
    Conceal = { fg = p.y3, bg = p.w1 },
    EndOfBuffer = { link = "Conceal" },
    Search = { fg = p.w1, bg = p.m2 },
    IncSearch = { fg = p.w1, bg = p.m2 },
    CurSearch = { link = "IncSearch" },
    Pmenu = { fg = p.g3, bg = p.g1 },
    PmenuSbar = { fg = p.g1, bg = p.g3 },
    PmenuSel = { fg = p.w4, bg = p.g2, underline = c.underline },
    PmenuKindSel = { fg = p.w4, bg = p.g2 },
    PmenuExtraSel = { link = "PmenuKindSel" },
    Question = { bold = c.bold },
    QuickFixLine = { bold = c.bold },
    WildMenu = { fg = p.w1, bg = p.m2 },
    DiagnosticError = { fg = p.w4 },
    DiagnosticSignError = { link = "DiagnosticError" },
    DiagnosticUnderlineError = { link = "DiagnosticError" },
    DiagnosticWarn = { fg = p.w4 },
    DiagnosticSignWarn = { link = "DiagnosticWarn" },
    DiagnosticUnderlineWarn = { link = "DiagnosticWarn" },
    DiagnosticInfo = { fg = p.w4 },
    DiagnosticSignInfo = { link = "DiagnosticInfo" },
    DiagnosticUnderlineInfo = { link = "DiagnosticInfo" },
    DiagnosticHint = { fg = p.w4 },
    DiagnosticSignHint = { link = "DiagnosticHint" },
    DiagnosticUnderlineHint = { link = "DiagnosticHint" },
    DiagnosticFloatingInfo = { fg = p.w4 },
    DiagnosticFloatingError = { link = "DiagnosticFloatingInfo" },
    DiagnosticFloatingWarn = { link = "DiagnosticFloatingInfo" },
    DiagnosticFloatingHint = { link = "DiagnosticFloatingInfo" },
    DiagnosticOk = { fg = p.w4 },
    Comment = { bold = c.bold, italic = c.italic.comment },
    Constant = { link = "Normal" },
    Character = { link = "Normal" },
    String = { link = "Normal" },
    Number = { link = "Normal" },
    Boolean = { link = "Normal" },
    Float = { link = "Normal" },
    Type = { link = "Normal" },
    StorageClass = { link = "Normal" },
    Structure = { link = "Normal" },
    Typedef = { link = "Normal" },
    Statement = { link = "Normal" },
    Conditional = { link = "Normal" },
    Repeat = { link = "Normal" },
    Label = { link = "Normal" },
    Operator = { link = "Normal" },
    Keyword = { link = "Normal" },
    Identifier = { link = "Normal" },
    Exception = { link = "Normal" },
    Function = { link = "Normal" },
    PreProc = { link = "Normal" },
    Include = { link = "Normal" },
    Define = { link = "Normal" },
    Macro = { link = "Normal" },
    PreCondit = { link = "Normal" },
    Special = { link = "Normal" },
    SpecialChar = { link = "Normal" },
    Tag = { underline = c.underline },
    Delimiter = { link = "Normal" },
    SpecialComment = { link = "Normal" },
    Debug = { link = "Normal" },
    Underlined = { underline = c.underline },
    Ignore = { bold = c.bold },
    Error = { fg = p.w1, bg = p.r3 },
    Todo = { bold = c.bold },
    htmlBold = { bold = c.bold },
    htmlItalic = { italic = true },
    GitSignsAdd = { fg = p.g2 },
    GitSignsChange = { fg = p.c2 },
    GitSignsDelete = { fg = p.r1 },

    ["@none"] = { bg = "NONE", fg = "NONE" },
    ["@preproc"] = { link = "PreProc" },
    ["@define"] = { link = "Define" },
    ["@operator"] = { link = "Operator" },
    ["@punctuation.delimiter"] = { link = "Delimiter" },
    ["@punctuation.bracket"] = { link = "Delimiter" },
    ["@punctuation.special"] = { link = "Delimiter" },
    ["@string"] = { link = "String" },
    ["@string.regex"] = { link = "String" },
    ["@string.regexp"] = { link = "String" },
    ["@string.escape"] = { link = "SpecialChar" },
    ["@string.special"] = { link = "SpecialChar" },
    ["@string.special.path"] = { link = "Underlined" },
    ["@string.special.symbol"] = { link = "Identifier" },
    ["@string.special.url"] = { link = "Underlined" },
    ["@character"] = { link = "Character" },
    ["@character.special"] = { link = "SpecialChar" },
    ["@boolean"] = { link = "Boolean" },
    ["@number"] = { link = "Number" },
    ["@number.float"] = { link = "Float" },
    ["@float"] = { link = "Float" },
    ["@function"] = { link = "Function" },
    ["@function.builtin"] = { link = "Special" },
    ["@function.call"] = { link = "Function" },
    ["@function.macro"] = { link = "Macro" },
    ["@function.method"] = { link = "Function" },
    ["@method"] = { link = "Function" },
    ["@method.call"] = { link = "Function" },
    ["@constructor"] = { link = "Special" },
    ["@parameter"] = { link = "Identifier" },
    ["@keyword"] = { link = "Keyword" },
    ["@keyword.conditional"] = { link = "Conditional" },
    ["@keyword.debug"] = { link = "Debug" },
    ["@keyword.directive"] = { link = "PreProc" },
    ["@keyword.directive.define"] = { link = "Define" },
    ["@keyword.exception"] = { link = "Exception" },
    ["@keyword.function"] = { link = "Keyword" },
    ["@keyword.import"] = { link = "Include" },
    ["@keyword.operator"] = { link = "Operator" },
    ["@keyword.repeat"] = { link = "Repeat" },
    ["@keyword.return"] = { link = "Keyword" },
    ["@keyword.storage"] = { link = "StorageClass" },
    ["@conditional"] = { link = "Conditional" },
    ["@repeat"] = { link = "Repeat" },
    ["@debug"] = { link = "Debug" },
    ["@label"] = { link = "Label" },
    ["@include"] = { link = "Include" },
    ["@exception"] = { link = "Exception" },
    ["@type"] = { link = "Type" },
    ["@type.builtin"] = { link = "Type" },
    ["@type.definition"] = { link = "Typedef" },
    ["@type.qualifier"] = { link = "Type" },
    ["@storageclass"] = { link = "StorageClass" },
    ["@attribute"] = { link = "PreProc" },
    ["@field"] = { link = "Identifier" },
    ["@property"] = { link = "Identifier" },
    ["@variable"] = { link = "Identifier" },
    ["@variable.builtin"] = { link = "Special" },
    ["@variable.member"] = { link = "Identifier" },
    ["@variable.parameter"] = { link = "Identifier" },
    ["@constant"] = { link = "Constant" },
    ["@constant.builtin"] = { link = "Special" },
    ["@constant.macro"] = { link = "Define" },
    ["@markup"] = { link = "Normal" },
    ["@markup.strong"] = { bold = c.bold },
    ["@markup.italic"] = { link = "@text.emphasis" },
    ["@markup.underline"] = { underline = c.underline },
    ["@markup.strikethrough"] = { strikethrough = c.strikethrough },
    ["@markup.heading"] = { link = "Title" },
    ["@markup.raw"] = { link = "String" },
    ["@markup.math"] = { link = "Special" },
    ["@markup.environment"] = { link = "Macro" },
    ["@markup.environment.name"] = { link = "Type" },
    ["@markup.link"] = { link = "Underlined" },
    ["@markup.link.label"] = { link = "SpecialChar" },
    ["@markup.list"] = { link = "Delimiter" },
    ["@markup.list.checked"] = { link = "Normal" },
    ["@markup.list.unchecked"] = { link = "Normal" },
    ["@comment.todo"] = { link = "Todo" },
    ["@comment.note"] = { link = "SpecialComment" },
    ["@comment.warning"] = { link = "WarningMsg" },
    ["@comment.error"] = { link = "ErrorMsg" },
    ["@diff.plus"] = { link = "diffAdded" },
    ["@diff.minus"] = { link = "diffRemoved" },
    ["@diff.delta"] = { link = "diffChanged" },
    ["@module"] = { link = "Normal" },
    ["@namespace"] = { link = "Normal" },
    ["@symbol"] = { link = "Identifier" },
    ["@text"] = { link = "Normal" },
    ["@text.strong"] = { bold = c.bold },
    ["@text.emphasis"] = { italic = c.italic.emphasis },
    ["@text.underline"] = { underline = c.underline },
    ["@text.strike"] = { strikethrough = c.strikethrough },
    ["@text.title"] = { link = "Title" },
    ["@text.literal"] = { link = "String" },
    ["@text.uri"] = { link = "Underlined" },
    ["@text.math"] = { link = "Special" },
    ["@text.environment"] = { link = "Macro" },
    ["@text.environment.name"] = { link = "Type" },
    ["@text.reference"] = { link = "Constant" },
    ["@text.todo"] = { link = "Todo" },
    ["@text.todo.checked"] = { link = "Todo" },
    ["@text.todo.unchecked"] = { link = "Todo" },
    ["@text.note"] = { link = "SpecialComment" },
    ["@text.note.comment"] = { fg = p.w4, bold = c.bold },
    ["@text.warning"] = { link = "WarningMsg" },
    ["@text.danger"] = { link = "ErrorMsg" },
    ["@text.danger.comment"] = { fg = p.w4, bg = p.r1, bold = c.bold },
    ["@text.diff.add"] = { link = "diffAdded" },
    ["@text.diff.delete"] = { link = "diffRemoved" },
    ["@tag"] = { link = "Tag" },
    ["@tag.attribute"] = { link = "Identifier" },
    ["@tag.delimiter"] = { link = "Delimiter" },
    ["@punctuation"] = { link = "Delimiter" },
    ["@macro"] = { link = "Macro" },
    ["@structure"] = { link = "Structure" },
    ["@lsp.type.class"] = { link = "@type" },
    ["@lsp.type.comment"] = { link = "@comment" },
    ["@lsp.type.decorator"] = { link = "@macro" },
    ["@lsp.type.enum"] = { link = "@type" },
    ["@lsp.type.enumMember"] = { link = "@constant" },
    ["@lsp.type.function"] = { link = "@function" },
    ["@lsp.type.interface"] = { link = "@constructor" },
    ["@lsp.type.macro"] = { link = "@macro" },
    ["@lsp.type.method"] = { link = "@method" },
    ["@lsp.type.modifier.java"] = { link = "@keyword.type.java" },
    ["@lsp.type.namespace"] = { link = "@namespace" },
    ["@lsp.type.parameter"] = { link = "@parameter" },
    ["@lsp.type.property"] = { link = "@property" },
    ["@lsp.type.struct"] = { link = "@type" },
    ["@lsp.type.type"] = { link = "@type" },
    ["@lsp.type.typeParameter"] = { link = "@type.definition" },
    ["@lsp.type.variable"] = { link = "@variable" },
  }
  return groups
end

Acme.setup = function(config)
  Acme.config = vim.tbl_deep_extend("force", Acme.config, config or {})
end

Acme.load = function()
  if vim.version().minor < 8 then
    vim.notify_once("acme.nvim: you must use neovim 0.8 or higher")
    return
  end

  -- reset colors
  if vim.g.colors_name then
    vim.cmd.hi("clear")
  end
  vim.g.colors_name = "acme"
  vim.o.termguicolors = true

  local groups = get_groups()

  -- add highlights
  for group, settings in pairs(groups) do
    vim.api.nvim_set_hl(0, group, settings)
  end
end

return Acme
